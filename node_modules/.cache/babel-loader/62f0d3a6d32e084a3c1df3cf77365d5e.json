{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nvar cookies = require('./cookies');\n\nvar storageBuilder = require('./storageBuilder');\n\nvar config = require('./config'); // Building this as an object allows us to mock the functions in our tests\n\n\nvar storageUtil = {}; // IE11 bug that Microsoft doesn't plan to fix\n// https://connect.microsoft.com/IE/Feedback/Details/1496040\n\nstorageUtil.browserHasLocalStorage = function () {\n  try {\n    var storage = storageUtil.getLocalStorage();\n    return storageUtil.testStorage(storage);\n  } catch (e) {\n    return false;\n  }\n};\n\nstorageUtil.browserHasSessionStorage = function () {\n  try {\n    var storage = storageUtil.getSessionStorage();\n    return storageUtil.testStorage(storage);\n  } catch (e) {\n    return false;\n  }\n};\n\nstorageUtil.getHttpCache = function () {\n  if (storageUtil.browserHasLocalStorage()) {\n    return storageBuilder(storageUtil.getLocalStorage(), config.CACHE_STORAGE_NAME);\n  } else if (storageUtil.browserHasSessionStorage()) {\n    return storageBuilder(storageUtil.getSessionStorage(), config.CACHE_STORAGE_NAME);\n  } else {\n    return storageBuilder(storageUtil.getCookieStorage(), config.CACHE_STORAGE_NAME);\n  }\n};\n\nstorageUtil.getLocalStorage = function () {\n  return localStorage;\n};\n\nstorageUtil.getSessionStorage = function () {\n  return sessionStorage;\n}; // Provides webStorage-like interface for cookies\n\n\nstorageUtil.getCookieStorage = function () {\n  return {\n    getItem: cookies.getCookie,\n    setItem: function setItem(key, value) {\n      // Cookie shouldn't expire\n      cookies.setCookie(key, value, '2038-01-19T03:14:07.000Z');\n    }\n  };\n};\n\nstorageUtil.testStorage = function (storage) {\n  var key = 'okta-test-storage';\n\n  try {\n    storage.setItem(key, key);\n    storage.removeItem(key);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nmodule.exports = storageUtil;","map":null,"metadata":{},"sourceType":"script"}