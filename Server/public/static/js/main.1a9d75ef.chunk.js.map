{"version":3,"sources":["navbar/Navbar.jsx","employees/Employee.jsx","home/HomePage.jsx","webportal/WebPortal.jsx","auth/SignInWidget.jsx","auth/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","classes","this","props","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","variant","grow","Button_default","href","Component","withStyles","flexGrow","marginLeft","marginRight","Employee","Grid_default","container","spacing","item","xs","Paper_default","paper","Divider_default","divider","button","margin","paddingTop","paddingLeft","paddingRight","paddingBottom","width","marginTop","withAuth","_Component","Home","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","authenticated","checkAuthentication","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","auth","isAuthenticated","sent","setState","stop","login","_callee2","_context2","logout","_callee3","_context3","inherits","createClass","key","value","_componentDidMount","_callee4","_context4","_componentDidUpdate","_callee5","_context5","mainContent","onClick","employees_Employee","WebPortal","currentUserName","currentUserEmail","idToken","JSON","parse","localStorage","getItem","claims","email","name","_this$state","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","renderEl","onSuccess","onError","remove","Login","res","redirect","sessionToken","session","token","err","console","log","window","location","origin","_checkAuthentication","Redirect","to","pathname","auth_SignInWidget","config","issuer","redirect_uri","client_id","App","BrowserRouter","dist","onAuthRequired","Navbar","Switch","Route","exact","path","component","HomePage","render","auth_Login","ImplicitCallback","Boolean","hostname","match","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a9d75ef.chunk.js","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\nimport React, { Component } from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nclass NavBar extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Tabs\n            </Typography>\n            <Button href=\"/\" color=\"inherit\">Home</Button>\n            <Button href=\"/portal\" color=\"inherit\">Settings</Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(NavBar);\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from \"@material-ui/core/styles\";\n\n\nconst styles = ({\n    root: {\n        flexGrow: 1,\n        margin: \"12px\",\n      },\n    paper: {\n        paddingTop: 30,\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingBottom: 30\n    },\n    divider: {\n        width: \"95%\",\n        marginTop: \"10px\",\n    },\n    button: {\n        marginTop: 10,\n    }\n});\n\nclass Employee extends Component {\n  \n  render() {\n      const { classes } = this.props\n    return (\n        <Grid container  className={classes.root} spacing={8}>\n            {/* This 4 block is for the left part with employee\n                profile picture and description */}\n            <Grid item xs={3}>\n                <Paper className={classes.paper}>\n                    Profile Section\n                </Paper>\n            </Grid>\n            {/* This 8 block is for the right part wth employee \n                information and settings */}\n            <Grid item xs={8}>\n                <Paper className={classes.paper}>\n                    Employee Information and Settings\n                    Personal Settings\n                    <Divider className={classes.divider}/>\n                    Social Settings\n                    <Divider className={classes.divider}/>\n                    <Button variant=\"contained\" color=\"inherit\" className={classes.button}>Save</Button>\n\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n  }\n} export default withStyles(styles)(Employee)\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuth } from '@okta/okta-react';\nimport Employee from '../employees/Employee';\n\nexport default withAuth(\n  class Home extends Component {\n    state = { authenticated: null };\n\n    checkAuthentication = async () => {\n      const authenticated = await this.props.auth.isAuthenticated();\n      if (authenticated !== this.state.authenticated) {\n        this.setState({ authenticated });\n      }\n    };\n\n    async componentDidMount() {\n      this.checkAuthentication();\n    }\n\n    async componentDidUpdate() {\n      this.checkAuthentication();\n    }\n\n    login = async () => {\n      this.props.auth.login('/');\n    };\n\n    logout = async () => {\n      this.props.auth.logout('/');\n    };\n\n    render() {\n      if (this.state.authenticated === null) return null;\n\n    //this is ternary: the first wrapper procts when it is true, the lattwer part if it is false\n      const mainContent = this.state.authenticated ? (\n        <div>\n          <button className=\"btn btn-light btn-lg\" onClick={this.logout}>\n            Logout\n          </button>\n        </div>\n      ) : (\n        <div>\n          <p className=\"lead\">\n            If you are a staff memberaaaaaa, please get your credentials from your\n            supervisor\n          </p>\n          <button className=\"btn btn-dark btn-lg\" onClick={this.login}>\n            Login\n          </button>\n        </div>\n      );\n\n      return (\n        <div className=\"jumbotron\">\n          <Employee/>\n          {mainContent}\n        </div>\n      );\n    }\n  }\n);","import React, { Component } from 'react'\n\nclass WebPortal extends Component {\n  state = {\n      currentUserName: '',\n      currentUserEmail: ''\n  }\n\n  componentDidMount() {\n    const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\n    this.setState({\n        currentUserEmail: idToken.idToken.claims.email,\n        currentUserName: idToken.idToken.claims.name\n    })\n  }\n  render() {\n    const { currentUserEmail, currentUserName } = this.state;\n    return (\n      <div>\n        <h1>Name: {currentUserName}</h1>\n        <p>Email: {currentUserEmail}</p>\n        <p>You made it to the payroll web portal</p>\n      </div>\n    )\n  }\n}\n\nexport default WebPortal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport OktaSignIn from '@okta/okta-signin-widget';\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\nimport '@okta/okta-signin-widget/dist/css/okta-theme.css';\n\nclass SignInWidget extends Component {\n  componentDidMount() {\n    const el = ReactDOM.findDOMNode(this);\n    this.widget = new OktaSignIn({\n      baseUrl: this.props.baseUrl\n    });\n    this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\n  }\n\n  componentWillUnmount() {\n    this.widget.remove();\n  }\n\n  render() {\n    return <div />;\n  }\n};\n\nexport default SignInWidget;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport SignInWidget from \"./SignInWidget\";\nimport { withAuth } from \"@okta/okta-react\";\n\nexport default withAuth(\n  class Login extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authenticated: null\n      };\n      this.checkAuthentication();\n    }\n\n    componentWillMount() {\n      console.log(\"Window location\")\n      console.log(window.location.origin)\n    }\n\n    async checkAuthentication() {\n      const authenticated = await this.props.auth.isAuthenticated();\n      if (authenticated !== this.state.authenticated) {\n        this.setState({ authenticated });\n      }\n    }\n\n    componentDidUpdate() {\n      this.checkAuthentication();\n    }\n\n    onSuccess = res => {\n      return this.props.auth.redirect({\n        sessionToken: res.session.token\n      });\n    };\n\n    onError = err => {\n      console.log(\"error logging in\", err);\n    };\n\n    render() {\n      if (this.state.authenticated === null) return null;\n      return this.state.authenticated ? (\n        <Redirect to={{ pathname: \"/\" }} />\n      ) : (\n        <SignInWidget\n          baseUrl={this.props.baseUrl}\n          onSuccess={this.onSuccess}\n          onError={this.onError}\n        />\n      );\n    }\n  }\n);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Security, ImplicitCallback } from \"@okta/okta-react\";\nimport Navbar from \"./navbar/Navbar\";\nimport HomePage from \"./home/HomePage\";\nimport WebPortal from \"./webportal/WebPortal\";\nimport Login from \"./auth/Login\";\n\nconst config = {\n  issuer: \"https://dev-500578.oktapreview.com/oauth2/default\",\n  redirect_uri: window.location.origin + \"/implicit/callback\",\n  client_id: \"0oahrdfs7sxBGFkES0h7\"\n};\n\n\n\nclass App extends Component {\n  // state = {\n  //   response: '',\n  //   post: '',\n  //   responseToPost: '',\n  // };\n\n  componentWillMount() {\n    console.log(\"Window location\")\n    console.log(window.location.origin)\n  }\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.express }))\n  //     .catch(err => console.log(err));\n\n\n  // }\n\n  // callApi = async () => {\n\n  //   const employee = {\n  //     emp_no: '10001',\n  //     birth_date: '1953-09-02',\n  //     first_name: 'Georgi',window.location.origin\n  //     last_name: 'Facello',\n  //     gender: 'M',\n  //     hire_date: '1986-06-26',\n  //   }\n\n  //   const id = {\n  //     emp_no: 10001\n  //   }\n  //   const url = new URL('http://localhost:3000/api/update')\n  //   url.search = new URLSearchParams(employee)\n  //   const response = await fetch(url);\n  //   const body = await response.json();\n  //   console.log(body)\n  //   if (response.status !== 200) throw Error(body.message);\n\n  //   return body;\n  // };\n\n  render() {\n    return (\n      <Router>\n        <Security \n          issuer={config.issuer}\n          client_id={config.client_id}\n          redirect_uri={config.redirect_uri}\n          onAuthRequired={this.onAuthRequired}\n        >\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n          </Switch>\n          <Route\n            path=\"/(.+)\"\n            render={() => (\n              <div>\n                <Switch>\n                  <Route\n                    path=\"/login\"\n                    render={() => (\n                      <Login baseUrl=\"https://dev-500578.oktapreview.com\" />\n                    )}\n                  />\n                  <Route\n                    path=\"/implicit/callback\"\n                    component={ImplicitCallback}\n                  />\n                  <Route path=\"/portal\" component={WebPortal} />\n                </Switch>\n              </div>\n            )}\n          />\n        </Security>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}